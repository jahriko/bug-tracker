{
  "extends": [
    "next/core-web-vitals",
    "prettier",
    "plugin:react/recommended",
    "plugin:@typescript-eslint/recommended",
    "plugin:@typescript-eslint/recommended-type-checked",
    "plugin:@typescript-eslint/strict-type-checked",
    "plugin:@typescript-eslint/stylistic",
    "plugin:@typescript-eslint/stylistic-type-checked",
    "plugin:import/typescript",
    "plugin:import/errors",
    "plugin:oxlint/recommended"
  ],
  "parser": "@typescript-eslint/parser",
  "parserOptions": {
    "project": "./tsconfig.json"
  },
  "plugins": ["react", "prettier", "import"],
  "rules": {
    "semi": "off",
    "quotes": "off",
    "comma-dangle": ["error", "always-multiline"],
    // "max-len": ["error", { "code": 120 }],
    "prettier/prettier": [
      "error",
      {
        "endOfLine": "auto",
        "printWidth": 120
      }
    ],
    "react/react-in-jsx-scope": "off",
    "react/jsx-props-no-spreading": "off",
    "react/forbid-prop-types": "off",
    "react/prop-types": "off",
    // defaultProps rule to be deprecated on function components
    // https://github.com/reactjs/rfcs/pull/107
    "react/require-default-props": "off",
    "react/no-unknown-property": "off",

    "@typescript-eslint/no-misused-promises": [
      2,
      {
        "checksVoidReturn": {
          "attributes": false
        }
      }
    ],

    //typescript
    "import/default": "off",
    "import/export": "off",
    "import/namespace": "off",
    "import/no-unresolved": "off",

    // best practices
    "array-callback-return": "error",
    "block-scoped-var": "error",
    "complexity": "error",
    "consistent-return": "error",
    "eqeqeq": ["error", "smart"],
    "guard-for-in": "error",
    "no-alert": "error",
    "no-caller": "error",
    "no-div-regex": "error",
    "no-eval": "error",
    "no-extend-native": "error",
    "no-extra-bind": "error",
    "no-extra-label": "error",
    "no-floating-decimal": "error",
    "no-implied-eval": "error",
    "no-iterator": "error",
    "no-labels": "error",
    "no-lone-blocks": "error",
    "no-loop-func": "error",
    "no-new": "error",
    "no-new-func": "error",
    "no-new-wrappers": "error",
    "no-proto": "error",
    "no-restricted-properties": "error",
    "no-return-assign": "error",
    "@typescript-eslint/restrict-template-expressions": "off",
    // "no-return-await": "error",
    "no-self-compare": "error",
    "no-sequences": "error",
    "no-throw-literal": "error",
    "no-unmodified-loop-condition": "error",
    "no-unused-expressions": "error",
    "no-useless-call": "error",
    "no-useless-concat": "error",
    "no-useless-escape": "error",
    "no-useless-return": "warn",
    "no-useless-rename": "warn",
    "no-void": "error",
    "no-with": "error",
    "no-var": "error",
    "radix": "error",
    "require-await": "error",
    "wrap-iife": "error",
    "yoda": "error",
    "consistent-this": ["warn", "that"],
    "func-name-matching": "error",
    "func-style": ["warn", "declaration", { "allowArrowFunctions": true }],
    "lines-between-class-members": ["error", "always", { "exceptAfterSingleLine": true }],
    "max-depth": "warn",
    "max-lines": ["warn", 1000],
    "max-params": ["warn", 4],
    "no-array-constructor": "warn",
    "no-bitwise": "warn",
    "no-lonely-if": "error",
    "no-multi-assign": "warn",
    "no-nested-ternary": "warn",
    "no-new-object": "warn",
    "no-underscore-dangle": "warn",
    "no-unneeded-ternary": "warn",
    "one-var": ["warn", "never"],
    "operator-assignment": "warn",
    "padding-line-between-statements": "error",

    //react
    /**
     * Disallow unnecessary curly braces in JSX props and children.
     *
     * ðŸ”§ Fixable - https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-curly-brace-presence.md
     */
    "react/jsx-curly-brace-presence": "warn",
    /**
     * Prevent problematic leaked values from being rendered.
     *
     * ðŸ”§ Fixable - https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-leaked-render.md
     */
    "react/jsx-no-leaked-render": "warn",
    /**
     * Disallow empty React fragments.
     *
     * ðŸ”§ Fixable - https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-no-useless-fragment.md
     */
    "react/jsx-no-useless-fragment": ["warn", { "allowExpressions": true }],
    /**
     * Require the use of PascalCase for user-defined JSX components.
     *
     * ðŸš« Not fixable - https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-pascal-case.md
     */
    "react/jsx-pascal-case": "warn",
    /**
     * Require props to be sorted alphabetically.
     *
     * ðŸ”§ Fixable - https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/jsx-sort-props.md
     */
    "react/jsx-sort-props": "warn",
    /**
     * Disallow closing tags for components without children.
     *
     * ðŸ”§ Fixable - https://github.com/jsx-eslint/eslint-plugin-react/blob/master/docs/rules/self-closing-comp.md
     */
    "react/self-closing-comp": "warn",

    // import
    "import/no-extraneous-dependencies": [
      "error",
      {
        "devDependencies": ["tests/**/*", "ruling/**/*"]
      }
    ],
    "import/extensions": "error",
    "import/first": "error",
    "import/newline-after-import": "error",
    "import/no-absolute-path": "error",
    "import/no-amd": "error",
    "import/no-deprecated": "error",
    "import/no-duplicates": "error",
    "import/no-mutable-exports": "error",
    "import/no-named-as-default": "error",
    "import/no-named-as-default-member": "error",
    "import/no-self-import": "error",
    "import/no-named-default": "error",
    "import/no-useless-path-segments": ["error"]
  }
}
