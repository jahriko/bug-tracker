datasource db {
    provider = "sqlite"
    url = env("DATABASE_URL")
}

generator client {
    provider = "prisma-client-js"
}

model Account {
    id String @id() @default(cuid())
    userId String
    type String
    provider String
    providerAccountId String
    refresh_token String?
    access_token String?
    expires_at Int?
    token_type String?
    scope String?
    id_token String?
    session_state String?
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)

    @@unique([provider, providerAccountId])
}

model Session {
    id String @id() @default(cuid())
    sessionToken String @unique()
    userId String
    expires DateTime
    user User @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
    id String @id() @default(cuid())
    name String
    email String? @unique()
    emailVerified DateTime?
    image String?
    hashedPassword String
    accounts Account[]
    sessions Session[]
    issues Issue[]
    ProjectLead Project[] @relation("ProjectLead")
}

model VerificationToken {
    identifier String
    token String @unique()
    expires DateTime

    @@unique([identifier, token])
}

model Project {
    id String @id() @default(cuid())
    title String
    issues Issue[]
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    projectLead User? @relation(fields: [projectLeadId], references: [id], name: "ProjectLead")
    projectLeadId String?
}

model Issue {
    id Int @id() @default(autoincrement())
    title String
    status String
    priority String
    description String
    label String
    createdAt DateTime @default(now())
    updatedAt DateTime @updatedAt()
    user User @relation(fields: [userId], references: [id])
    userId String
    project Project @relation(fields: [projectId], references: [id])
    projectId String
}